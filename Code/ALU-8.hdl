 
CHIP ALU-8 {
    IN  
        x[8], y[8],  // 8-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute out = x + y (if 1) or x & y (if 0)
        no; // negate the out output?

    OUT 
        out[8], // 8-bit output
        zr, // 1 if (out == 0), 0 otherwise
        ng; // 1 if (out < 0),  0 otherwise

    PARTS:
   // Put you code here:
Mux8(a=x,b=false,sel=zx,out=x1);
Mux8(a=y,b=false,sel=zy,out=y1);

Not8(in=x1,out=notx1);
Mux8(a=x,b=notx1,sel=nx,out=x2);

Not8(in=y1,out=noty1);
Mux8(a=y,b=noty1,sel=ny,out=y2);

Add8(a=x2,b=y2,out=addout);
And8(a=x2,b=y2,out=andout);

Mux8(a=addout,b=andout,sel=f,out=fout);

Not8(in=fout,out=notfout);
Mux8(a=fout,b=notfout,sel=no,out=out,out[0..3]=o1,out[4..7]=o2,out[7]=ng);

Or4Way(in=o1,out=zr0);
Or4Way(in=o2,out=zr1);
Or(a=zr0,b=zr1,out=zr2);
Not(in=zr2,out=zr);
}